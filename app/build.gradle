plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}
apply from: "murge.gradle"
android {
    compileSdkVersion configs.compileSdkVersion

    defaultConfig {
        applicationId "com.qiusuo.videoeditor"
        minSdkVersion configs.minSdkVersion
        targetSdkVersion configs.targetSdkVersion
        versionCode 100
        versionName "1.0.0"
        compileSdkPreview = "UpsideDownCake"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        debug {

        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            java {
                srcDir "src/main/java"
//                srcDir "../selector/src/main/java"
            }
            res {
                srcDir "src/main/res"
//                srcDir "../selector/src/main/res"
            }
            assets {
                srcDir "src/main/assets"
//                srcDir "../selector/src/main/assets"
            }
        }
    }
}
configurations.all {
    resolutionStrategy {
        force 'androidx.core:core:1.9.0'
    }
}

dependencies {
    implementation("androidx.room:room-runtime:$configs.room_version")
    annotationProcessor("androidx.room:room-compiler:$configs.room_version")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$configs.room_version")
    implementation("androidx.room:room-ktx:$configs.room_version")

    implementation "androidx.core:core:1.9.0"
    implementation 'androidx.core:core-ktx:1.12.0-alpha01'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation("androidx.recyclerview:recyclerview:1.3.0")
    implementation project(path: ':mediaSdk')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation("androidx.annotation:annotation:${configs.androidx_annotation}")
    //retrofit
    implementation("com.squareup.retrofit2:retrofit:${configs.versions_retrofit}")
    implementation("com.squareup.retrofit2:adapter-rxjava2:${configs.versions_retrofit}")
    implementation("com.squareup.retrofit2:converter-gson:${configs.versions_retrofit}")
    implementation("com.squareup.retrofit2:converter-scalars:${configs.versions_retrofit}")

    //room
    implementation("androidx.room:room-runtime:${configs.androidx_room}")
    implementation("androidx.room:room-rxjava2:${configs.androidx_room}")
    implementation("androidx.room:room-ktx:${configs.androidx_room}")

    //状态栏
    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
// fragment快速实现（可选）
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'
// kotlin扩展（可选）
    implementation 'com.gyf.immersionbar:immersionbar-ktx:3.0.0'

    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.0")
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.6.0"

    implementation("androidx.lifecycle:lifecycle-process:${configs.androidx_lifecycle}")

    implementation("androidx.activity:activity-ktx:1.7.2")
    implementation("androidx.fragment:fragment-ktx:1.3.6")

    // Glide
    implementation("com.github.bumptech.glide:glide:${configs.version_glide}")
    implementation("com.github.bumptech.glide:okhttp3-integration:${configs.version_glide}")
    kapt("com.github.bumptech.glide:compiler:${configs.version_glide}")
    // 下拉刷新
    implementation("in.srain.cube:ultra-ptr:${configs.versions_ptr}")
    // 右滑返回
    implementation("me.imid.swipebacklayout.lib:library:${configs.versions_swipebacklayout}")

    // Lottie
    implementation("com.airbnb.android:lottie:${configs.versions_lottie}")
    // Banner
    implementation("io.github.youth5201314:banner:${configs.versions_banner}")

    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
//    implementation "androidx.appcompat:appcompat:${configs.version_appcompat}"
//    implementation "androidx.recyclerview:recyclerview:${configs.version_recyclerview}"
//    implementation "androidx.activity:activity:${configs.activity_version}"
//    implementation "androidx.fragment:fragment:${configs.fragment_version}"
//    implementation "androidx.exifinterface:exifinterface:${configs.androidx_exifinterface_version}"
//    implementation "androidx.viewpager2:viewpager2:${configs.viewpage2}"
//    implementation "androidx.constraintlayout:constraintlayout:${configs.constraintlayout}"
    implementation "com.google.android.exoplayer:exoplayer:${configs.exoplayer}"
//    implementation "com.github.bumptech.glide:glide:${configs.glide_version}"
//
    implementation("io.coil-kt:coil:${configs.coil_version}")
    implementation("io.coil-kt:coil-gif:${configs.coil_version}")

    implementation 'com.github.smarxpan:NotchScreenTool:0.0.1'
    implementation('com.gyf.immersionbar:immersionbar-ktx:3.0.0')


}